{% extends "./layout.twig" %}
{% block head %}
<title>Chat</title>
<link rel='stylesheet' href='/CSS/testconsole.css'/>
{% endblock %}

{% block body %}
<main>
  <div id="msg-container"></div>
    <span>
      <div class="proposition" id="prop" style='display: none'>
        <div>Hello</div>
      </div>
      <input type="text" id="input-msg">
      <button type="button" onclick="sendMessage()">Send</button>
    </span>
</main>
<nav>
  <h2>Accepted types</h2>
  <div>
    <label for='i-txt'> Text
      <input type='checkbox' id='i-txt' disabled checked types='text'/>
    </label>
    <label for='i-btn'> Button
      <input type='checkbox' id='i-btn' types='btn'/>
    </label>
    <label for='i-dd'> Dropdown
      <input type='checkbox' id='i-dd' types='dropdown'/>
    </label>
    <label for='i-media'> Media
      <input type='checkbox' id='i-media' types='media'/>
    </label>
    <label for='i-link'> Link
      <input type='checkbox' id='i-link' types='link'/>
    </label>
  </div>
</nav>
<script>
  let container;
  let oldphrases = [];
  let prop;
  window.onload = function () {
    container = document.getElementById("msg-container");
    prop = document.getElementById('prop');
    document.addEventListener('keypress', function(e) {
      if(e.keyCode === 13) {
        sendMessage();
      }
    });
    document.getElementById('input-msg').addEventListener('focus', function (e) {
      e.stopPropagation();
      prop.style.display = null;
      prop.innerHTML = '';
      oldphrases.forEach(e => {
        prop.innerHTML += '<div onclick="replace(\'' + e + '\')">' + e + '</div>';
      });
    });

    document.getElementById('input-msg').addEventListener('input', function () {
      prop.innerHTML = '';
      let val = document.getElementById('input-msg').value;
      oldphrases.forEach(e => {
        if (e.startsWith(val)) {
          prop.innerHTML += '<div onclick="replace(\'' + e + '\')">' + e + '</div>';
        }
      });
    });

    document.getElementById('input-msg').addEventListener('click', function(e) {
      e.stopPropagation();
    });

    document.body.addEventListener('click', function (e) {
      prop.style.display = 'none';
    });

  }

  function replace (text) {
    document.getElementById('input-msg').value = text;
  }

  function showResponse (data) {
    var int = setInterval(() => {
      container.scrollTop = container.scrollHeight;
    }, 20);
    setTimeout(() => {
      clearInterval(int);
    }, 2000);

    data.responses.forEach(r => {
      let d = document.createElement('div');
      d.setAttribute('style', 'text-align: left');
      let s = document.createElement('span');
      if (r.text) {
        s.innerHTML = r.text.replace(/\n/, '<br>');
      } else if (r.btn) {
        r.btn.btns.forEach(b => {
          let but = document.createElement('button');
          but.setAttribute('onclick', 'sendEvent(\'' + b.value + '|' + b.followupintent + '\')');
          but.textContent = b.text;
          s.appendChild(but);
        });
      } else if (r.dropdown) {
        let dd = document.createElement('select');
        dd.setAttribute('onchange', 'sendEventDD(this)');
        let o = document.createElement('option');
        o.textContent = 'Choose';
        dd.appendChild(o);
        r.dropdown.opts.forEach(op => {
          let o = document.createElement('option');
          o.textContent = op.text;
          o.setAttribute('value', op.value + '|' + op.followupintent);
          dd.appendChild(o);
        });
        s.appendChild(dd);
      } else if (r.media) {
        let img = document.createElement('img');
        img.setAttribute('src', r.media);
        s.appendChild(img);
      } else if (r.link) {
        let link = document.createElement('a');
        link.setAttribute('href', r.link);
        link.textContent = 'Link';
        s.appendChild(link);
      }
      d.appendChild(s);
      container.appendChild(d);
    });

    //window.scrollTo(0,container.scrollHeight);
  }

  function sendMessage () {
    const msg = document.getElementById("input-msg").value;
    if (!oldphrases.includes(msg)) {
      oldphrases.push(msg);
    }
    document.getElementById("input-msg").value = '';
    const url = '/webapp/sendmessage';
    var req = new XMLHttpRequest();
    container.innerHTML += '<div style="text-align: right"><span>' + msg + '</span></div>';
    req.open("POST", url);
    req.setRequestHeader("Content-Type", "application/json");
    req.onerror = function() {
        console.log("Échec de chargement "+url);
    };
    req.onload = function() {
        if (req.status === 200) {
          var data = JSON.parse(req.responseText);
          showResponse(data);
        } else {
          console.log("Erreur " + req.status);
        }
    };
    let types = [];
    document.querySelectorAll('input[type="checkbox"]').forEach(e => {
      if(e.checked) {
        types.push(e.getAttribute('types'));
      }
    });
    req.send(JSON.stringify({ msg, from: 'toto', types }));
  }

  function sendEvent (ac) {
    const url = '/webapp/sendevent';
    var req = new XMLHttpRequest();
    req.open("POST", url);
    req.setRequestHeader("Content-Type", "application/json");
    req.onerror = function() {
        console.log("Échec de chargement "+url);
    };
    req.onload = function() {
        if (req.status === 200) {
          var data = JSON.parse(req.responseText)
          showResponse(data);
          console.log(data);
        } else {
          console.log("Erreur " + req.status);
        }
    };
    let types = [];
    document.querySelectorAll('input[type="checkbox"]').forEach(e => {
      if(e.checked) {
        types.push(e.getAttribute('types'));
      }
    });
    let event = [
      {
        action: ac
      }
    ];
    req.send(JSON.stringify({ from: 'toto', types, event }));
  }

  function sendEventDD (elem) {
    const url = '/webapp/sendevent';
    var req = new XMLHttpRequest();
    req.open("POST", url);
    req.setRequestHeader("Content-Type", "application/json");
    req.onerror = function() {
        console.log("Échec de chargement "+url);
    };
    req.onload = function() {
        if (req.status === 200) {
          var data = JSON.parse(req.responseText)
          showResponse(data);
          console.log(data);
        } else {
          console.log("Erreur " + req.status);
        }
    };
    let types = [];
    document.querySelectorAll('input[type="checkbox"]').forEach(e => {
      if(e.checked) {
        types.push(e.getAttribute('types'));
      }
    });
    ac = elem.value;
    let event = [
      {
        action: ac
      }
    ];
    req.send(JSON.stringify({ from: 'toto', types, event }));
  }
</script>
{% endblock %}
